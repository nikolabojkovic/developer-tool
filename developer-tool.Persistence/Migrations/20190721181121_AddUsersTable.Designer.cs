// <auto-generated />
using Domain.Enums;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using MySql.Data.EntityFrameworkCore.Storage.Internal;
using Persistence.DbContexts;
using System;

namespace Persistence.Migrations
{
    [DbContext(typeof(BackOfficeContext))]
    [Migration("20190721181121_AddUsersTable")]
    partial class AddUsersTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Domain.PersistenceModels.CalendarEventModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Color");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("End");

                    b.Property<int?>("ReminderId");

                    b.Property<DateTime>("Start");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ReminderId")
                        .IsUnique();

                    b.ToTable("CalendarEvents");
                });

            modelBuilder.Entity("Domain.PersistenceModels.ReminderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<int?>("EventId");

                    b.Property<DateTime>("Time");

                    b.Property<int>("TimeOffset");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("Domain.PersistenceModels.TodoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("IsArchived");

                    b.Property<bool>("IsCompleted");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("Domain.PersistenceModels.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.PersistenceModels.CalendarEventModel", b =>
                {
                    b.HasOne("Domain.PersistenceModels.ReminderModel", "Reminder")
                        .WithOne()
                        .HasForeignKey("Domain.PersistenceModels.CalendarEventModel", "ReminderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Domain.PersistenceModels.ReminderModel", b =>
                {
                    b.HasOne("Domain.PersistenceModels.CalendarEventModel", "Event")
                        .WithMany()
                        .HasForeignKey("EventId");
                });
#pragma warning restore 612, 618
        }
    }
}
